# -*- coding: utf-8 -*-
"""Random Forest 8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gbFGZE8tsvNuvkvJzB_ce_85WkQdOBY2
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn import tree
from sklearn.metrics import accuracy_score,confusion_matrix

df = pd.read_csv('blues_hand.csv')

df

bins = [0, 1901, 1921, np.inf]
names = ['1', '2', '3']

df['year_seg'] = pd.cut(df['brthYr'], bins, labels=names)

print(df.dtypes)
df

# Convert categorical data into int representations of unique categories
for col in df.columns:
  labels, uniques = pd.factorize(df[col])
  df[col] = labels

X = df[['handPost', 'thumbSty']]
y = df['year_seg']
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3)

dtree = DecisionTreeClassifier()
dtree.fit(X_train,y_train)
predictions = dtree.predict(X_test)
print(accuracy_score(y_test, predictions))
print(confusion_matrix(y_test, predictions))

from sklearn.ensemble import RandomForestClassifier

rfc = RandomForestClassifier(n_estimators=500)
rfc.fit(X_train, y_train)

predictions = rfc.predict(X_test)
print(accuracy_score(y_test, predictions))
print(confusion_matrix(y_test, predictions))

X2 = df[['region']]
y2 = df['year_seg']
X2_train,X2_test,y2_train,y2_test = train_test_split(X2,y2,test_size=0.3)

dtree = DecisionTreeClassifier()
dtree.fit(X2_train,y2_train)
predictions = dtree.predict(X2_test)
print(accuracy_score(y2_test, predictions))
print(confusion_matrix(y2_test, predictions))

from sklearn.ensemble import RandomForestClassifier

rfc = RandomForestClassifier(n_estimators=500)
rfc.fit(X2_train, y2_train)

predictions = rfc.predict(X2_test)
print(accuracy_score(y2_test, predictions))
print(confusion_matrix(y2_test, predictions))

