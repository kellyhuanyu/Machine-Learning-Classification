# -*- coding: utf-8 -*-
"""Joke 7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sw5j-1eQAlVGN7ClBaNAOiwrp2gOvcaz
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn import tree
from sklearn.metrics import accuracy_score,confusion_matrix

df = pd.read_csv('TipJoke.csv')
df

# # Convert categorical data into int representations of unique categories
# for col in df.columns:
#   labels, uniques = pd.factorize(df[col])
#   df[col] = labels

X = df[['Ad','Joke','None']]
y = df['Tip']
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3)

dtree = DecisionTreeClassifier()
dtree.fit(X_train,y_train)
predictions = dtree.predict(X_test)
print(accuracy_score(y_test, predictions))
print(confusion_matrix(y_test, predictions))

import graphviz
dot_data = tree.export_graphviz(dtree,out_file=None,feature_names=('Ad','Joke','None'),
                                class_names=('0','1'),
                                filled=True)
graph = graphviz.Source(dot_data, format="png")
graph.render('tip_joke',view=True)

with open("tip_joke") as f:
  dot_graph = f.read()
graphviz.Source(dot_graph)

text_representation = tree.export_text(dtree)
print(text_representation)

